Hereâ€™s a categorized breakdown of the most used annotations:

ðŸ”¹ 1. Spring Boot Core

@SpringBootApplication â†’ Main entry point (includes @Configuration, @EnableAutoConfiguration, @ComponentScan).

@EnableScheduling, @EnableAsync, @EnableCaching â†’ Enable features.

ðŸ”¹ 2. Stereotype Annotations (Layering)

@Component â†’ Generic Spring-managed bean.

@Service â†’ Business logic layer.

@Repository â†’ Persistence layer (DAO).

@Controller â†’ MVC controller.

@RestController â†’ Shortcut for @Controller + @ResponseBody (used in REST APIs).

ðŸ”¹ 3. Dependency Injection

@Autowired â†’ Field/constructor injection.

@Qualifier â†’ Choose which bean to inject when multiple exist.

@Primary â†’ Mark a bean as the default when multiple candidates exist.

@Value â†’ Inject property values (from application.properties/yml).

@ConfigurationProperties â†’ Bind groups of properties into a POJO.

@Bean â†’ Define a bean in a configuration class.

ðŸ”¹ 4. Web & REST APIs

@RequestMapping (or @GetMapping, @PostMapping, @PutMapping, @DeleteMapping) â†’ Map HTTP requests.

@PathVariable â†’ Extract values from the URI path.

@RequestParam â†’ Extract query parameters.

@RequestBody â†’ Bind request JSON/XML body to an object.

@ResponseBody â†’ Return object as JSON/XML (auto in @RestController).

@CrossOrigin â†’ Enable CORS for APIs.

ðŸ”¹ 5. Persistence (Spring Data JPA)

@Entity â†’ Marks a JPA entity.

@Table, @Column, @Id, @GeneratedValue â†’ ORM mappings.

@Repository â†’ Marks repository interfaces.

@Query â†’ Custom SQL/JPQL query in a repository.

@Transactional â†’ Transaction boundary for DB operations.

ðŸ”¹ 6. Validation

@Valid or @Validated â†’ Trigger validation.

@NotNull, @NotBlank, @Size, @Email, @Pattern, etc. (JSR-380 Bean Validation annotations).

ðŸ”¹ 7. AOP & Cross-Cutting Concerns

@Aspect â†’ Define an aspect.

@Before, @After, @Around â†’ Advice methods.

ðŸ”¹ 8. Testing

@SpringBootTest â†’ Bootstraps full Spring context for integration tests.

@DataJpaTest â†’ JPA repository testing.

@WebMvcTest â†’ Controller testing.

@MockBean â†’ Mock beans in Spring context.