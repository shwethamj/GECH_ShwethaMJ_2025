Inner classes:
==============
IS-A , HAS-A
* we can declare a class inside the another class such type of classes are called inner class.
* without existing on type of object if there is no chance of existing anotehr type of object then we should go for inner classes.(composition and aggregation)

ex1:university and department
class university{
	class department{
	}
}

ex2: car and engine

ex3: map and entry

* this kind of relation we called it has Has-A relationship not Is-A

Based on position of decleration and behaviour:
===============================================
1. normal or regular inner classes.
2. method local inner classes.
3. Anonymous Inner classes.
4. Static Nested Inner classes.

1. normal or regular inner classes:
===================================
* if we are declearing any named class directly inside a class without static modifier such type  inner class called normal.
ex:
===
class Outer{
	class Inner{
	}
}

* creates two .class Outer.class and Outer&Inner.class
* if you run using java command you will get RE:NoSuchMethodError:Main.

ex2:
====
class Outer{
	class Inner{
	}
	psvm(){
		syso("hi");
	}
}

ex3:
====
we cannot decleare static members hence we cann'tdecleare main method & we can't run inner class directly.

CE: Inner class cannot have static declerations.

	case1: accessing inner class code from static area of outer class - main.

case2: accesing class code from instance area of outer class.

case3: accessing class code fromoutside the outer class.

* from normal inner classes we can access both static and non static members of outer class diectly.

* within inner class we use "this" or "innerclassname.this" to access outer class use "outerclassname.this".