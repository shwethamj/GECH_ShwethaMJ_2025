
SPRINGBOOT SECURITY:
=======================
	* SPRING SECURITY IS ALL ABOUT YOUR AUTHETICATION AND AUTHHORIZATION
	
AUTHETICATION -> WHO YOU ARE?
AUTHORIZATION -> ACCCESS OR ROLES OR PERMISSIONS

FROM ARCHITECTURE:
------------------
		(refer the drawio diagram(it can open by website called draw io)
		 which is saved in notes(gech-shwetha-2025) for architecture)
	
		1. DISPATURE SERVLET(DS) -> WILL HANDLE THE REQUEST AND MAPPING INTERNALLY
		2.HANDLER MAPPING-> INTERFACE BETWEEN CONTROLLER AND FRONT END AND BEFORE GOING TO dS THERE ARE SOME FILTERS PRESENT IT WILL PASS THROUGH THEM
		3.TOMCAT -> embedded server/internal server inside the springboot used for managing filters(from birth to death of servlet manged by tomcat)
		4. DelegatingFilterProxy -- one of the imp filters 
		5. Spring intializer  has one depedency called SpringSecurity - this should be used inside our project 
		  	<depedency> <groupId>org.sprigframework.security </groupId> </depedency>
		6. using spring security we can either login through
				--username and password 
				--JWT(json wEB tOKEN) tOKEN
				- OAuth2.0 authetication -using github,google,facebook
			Ex: When we log in any website, we can either login through username and password or login using google - OAuth2.O

(below is sir wriiten)			
>> By default spring security gives 2 authentication with username and password.
	1. For Rest API spring boot,-- spring security will provide -HTTPBasicAuthentication.
	2. For MVC,-- spring will provide - formBasedAuthentication.
>> For both of the above methods it will use username and password.

>> When we use security dependency, when we run the page it will redirect to login page /login where we need to sign in through username and password
>> username is user by default and password is generated by spring and displayed inside console
>> every time we run the server, new password is generated 
>> to logout by default we have /logout
>> Servlet Filter Chain will handle the request by default if authentication is not used

>> Refer Spring Security